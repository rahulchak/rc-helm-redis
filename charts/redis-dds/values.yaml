clusterDomain: cluster.local
enableAvi: true
nameOverride: ""
enableAuthentication: false
fullnameOverride: ""
image:
  registry: docker.io
  repository: redis
  pullPolicy: IfNotPresent
  tag: 6.0.4
redis: 
  stateful: 
    enabled: true
    storage: 3Gi
  replicas: 3
  service:
    type: ClusterIP
    port: 6378
    annotations:
      app.kubernetes.io/name: redis-dds
      app.kubernetes.io/instance: redis-dds
      app.kubernetes.io/version: 6.0.4
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi
  users:
    producer: on ~* +@read +@write nopass
    consumer: on ~* +@read nopass
  config:
    port: 6378
    maxmemory: 1000mb
    maxmemoryPolicy: allkeys-lru
    dir: /data
    appendonly: "yes"
    appendfsync: everysec
    replDisklessSync: "yes"
    hz: 50
    noAppendfsyncOnRewrite: "no"
    autoAofRewriteMinSize: 256mb
    autoAofRewritePercentage: 100
    replDisklessSync: "yes"
    replTimeout: 360
    replBacklogSize: 100mb
  startup:
    healthCheckCount: 20
    sleepTime: 5
sentinel: 
  service:
    type: ClusterIP
    port: 26379
    annotations:
      app.kubernetes.io/name: redis-msp
      app.kubernetes.io/instance: redis-msp
      app.kubernetes.io/version: 6.0.3
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi
  config:
    port: 26379
    dir: /data
    downAfterMilliseconds: 60000
    parallelSyncs: 1
    failoverTimeout: 18000
proxy:
  image:
    registry: docker.io
    repository: findelabs/redis-rust-proxy
    pullPolicy: IfNotPresent
    tag: 0.2.9
  service: 
    type: ClusterIP
    port: 6379
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
prometheus:
  enabled: true
  image:
    registry: docker.io
    repository: oliver006/redis_exporter
    pullPolicy: IfNotPresent
    tag: v0.21.1
  service:
    type: ClusterIP
    port: 9121
  resources:
    limits:
      cpu: 100m
      memory: 1024Mi
    requests:
      cpu: 10m
      memory: 128Mi
serviceAccount:
  create: true
  name: ""
  annotations: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: 
  allowPrivilegeEscalation: false
nodeSelector: {}
tolerations: []
affinity: {}
