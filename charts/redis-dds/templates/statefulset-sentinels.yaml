{{ if gt (.Values.redis.replicas | int) 1 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-sentinels
  labels:
    {{- include "redis-dds.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "redis-dds.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Release.Name }}-sentinels-headless
  replicas: {{ .Values.sentinel.replicas }}
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap-sentinels.yaml") . | sha256sum }}
      {{- include "generic.vaultAnnotations" . | nindent 8 }}
      labels:
        app.kubernetes.io/role: "sentinel"
        {{- include "redis-dds.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "redis-dds.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sentinel
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["/redis-configs/start-sentinel.sh"]
          env:
          - name: MY_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          volumeMounts:
          - name: redis-config-volume
            mountPath: /redis-configs
          - name: temp-data
            mountPath: /data
          ports:
            - name: sentinel
              containerPort: {{ .Values.sentinel.config.port }}
              protocol: TCP
          startupProbe:
            periodSeconds: 5
            failureThreshold: 60
            tcpSocket:
              port: sentinel
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - bash
                - -c
                - /redis-configs/readiness-script.sh 26379
          livenessProbe:
            initialDelaySeconds: 10 
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - bash
                - -c
                - /redis-configs/sentinel-liveness-script.sh
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: redis-data
          emptyDir: {}
        - name: redis-config-volume
          configMap:
            name: {{ include "redis-dds.fullname" . }}-sentinels-config
            defaultMode: 0755
        - name: host-sys
          hostPath:
            path: /sys
        - name: temp-data
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
