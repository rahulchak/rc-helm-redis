apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-master
  labels:
    {{- include "redis-msp.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "redis-msp.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Release.Name }}-headless
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "redis-msp.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "redis-msp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: master
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["/redis-configs/start-master.sh"]
          env:
          - name: MY_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          volumeMounts:
          - name: redis-config-volume
            mountPath: /redis-configs
          - name: redis-data
            mountPath: /data
          - name: host-sys
            mountPath: /host-sys
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
          readinessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
        - name: sentinel
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.sentinel.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["/redis-configs/start-master-sentinel.sh"]
          env:
          - name: MY_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          volumeMounts:
          - name: redis-config-volume
            mountPath: /redis-configs
          - name: temp-data
            mountPath: /data
          ports:
            - name: sentinel
              containerPort: {{ .Values.sentinel.config.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: sentinel
          readinessProbe:
            tcpSocket:
              port: sentinel
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
        - name: proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["/redis-configs/start-proxy.sh"]
          volumeMounts:
          - name: redis-config-volume
            mountPath: /redis-configs
          ports:
            - name: proxy
              containerPort: {{ .Values.proxy.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: proxy
          readinessProbe:
            tcpSocket:
              port: proxy
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: redis-config-volume
          configMap:
            name: {{ include "redis-msp.fullname" . }}-redis-config
        - name: host-sys
          hostPath:
            path: /sys
        - name: temp-data
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.redis.statefulStorage }}
