|
  This cache has been created with the following users:
    admin: {{ .Release.Name }}-admin (@all)
    producer: {{ .Release.Name }}-producer (@read @write)
    monitor: {{ .Release.Name }}-monitor (+info +ping)

  The {{ .Release.Name }}-admin account is password protected, get the password by running:
  export ADMIN_PASS=$(echo $(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }} -o jsonpath="{.data.password}") | base64 --decode)

{{- if contains "NodePort" .Values.redis.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "redis-solo.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

  Connect to your redis cache with:
    redis-cli -h $NODE_IP -p $NODE_PORT
{{- else if contains "LoadBalancer" .Values.redis.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "redis-solo.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "redis-solo.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
{{- else if contains "ClusterIP" .Values.redis.service.type }}

  Get the pod name by running these commands:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "redis-solo.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")

  Proxy your redis cache to localhost:6379 with the following command:
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 6379:6379

  ..then run a docker container to connect:
  sudo docker run --network host -it redis /usr/local/bin/redis-cli --user {{ .Release.Name }}-admin --pass $ADMIN_PASS
{{- end }}

  You can exec into your pod with the following command:
  kubectl exec -it $POD_NAME -- /bin/bash

  You can also connect to the cache from within kubernetes with the following command:
  kubectl run --namespace {{ .Release.Namespace }} {{ include "redis-solo.fullname" . }}-client --rm --tty -i --restart='Never' \
  --image {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }} -- /usr/local/bin/redis-cli -h {{ template "redis-solo.fullname" . }} --user {{ .Release.Name }}-admin --pass $ADMIN_PASS
  
